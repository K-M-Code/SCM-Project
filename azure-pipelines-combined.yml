# Kunal Menon Pipeline for Build and Deploy to Timos Server
# This 1st builds the JAR file for the server 
# Then 2nd builds the build files for the client
# Final step copies the JAR file and BUILD folder to the server over SSH

# trigger:
# - master

name: $(Date:MM)

variables:
    aplhabet: a
    
    mydateMacro1: $(Get-Date -Format MM)
    mydateMacro2: $(Get-Date -Format yyyyMMddhhmmss)

steps:
  - script: echo 'pw-$(Build.BuildNumber)$(aplhabet)'
            echo mydateMacro1
            echo mydataMacro2
  - script: mkdir 'pw-$(Build.BuildNumber)$(aplhabet)'
  - script: ls

# pool:
#   vmImage: ubuntu-latest

# stages:
# - stage: Build_Server
#   displayName: Build Server
#   jobs:
#   - job: Build_Server      
#     displayName: Build SCM Server

    # steps:
    # - bash: $(a)
    # - task: Maven@3
    #   inputs:
    #     mavenPomFile: 'scm-server/pom.xml'
    #     mavenOptions: '-Xmx3072m'
    #     javaHomeOption: 'JDKVersion'
    #     jdkVersionOption: '1.9'
    #     jdkArchitectureOption: 'x64'
    #     publishJUnitResults: true
    #     testResultsFiles: '**/surefire-reports/TEST-*.xml'
    #     goals: 'package'

    # - task: CopyFiles@2
    #   displayName: 'Copy Jar Files to artifact staging directory'
    #   inputs:
    #     SourceFolder: '$(System.DefaultWorkingDirectory)'
    #     Contents: '**/scm-server/target/*.?(war|jar)'
    #     TargetFolder: $(Build.ArtifactStagingDirectory)

    # - task: PublishBuildArtifacts@1
    #   inputs:
    #     pathToPublish: $(Build.ArtifactStagingDirectory)
    #     artifactName: SpringBootBuild
        
    # - task: CopyFilesOverSSH@0
    #   displayName: 'Securely copy files to the remote machine'
    #   inputs:
    #     sshEndpoint: timoserver
    #     SourceFolder: '$(System.DefaultWorkingDirectory)'
    #     Contents: '**/scm-server/target/*.?(war|jar)'
    #     targetFolder: /home/kmcode/scm-km/test/
    #     failOnEmptySource: true


# - stage: Build_Client
#   displayName: Build Client
#   jobs:
#   - job: Build_Client
#     displayName: Build SCM Client

#     steps:
#     - task: NodeTool@0
#       inputs:
#         versionSpec: '16.x'
#       displayName: 'Install Node.js'

#     - script: |
#         cd scm-client
#         npm install
#         npm run build
#       displayName: 'npm install and build'

#     - task: CopyFiles@2
#       displayName: 'Copy Build Files to artifact staging directory'
#       inputs:
#         SourceFolder: '$(System.DefaultWorkingDirectory)'
#         Contents: '**/scm-client/build/**'
#         TargetFolder: $(Build.ArtifactStagingDirectory)

#     - task: PublishBuildArtifacts@1
#       inputs:
#         pathToPublish: $(Build.ArtifactStagingDirectory)
#         artifactName: ReactBuild

#     - task: CopyFilesOverSSH@0
#       displayName: 'Securely copy files to the remote machine'
#       inputs:
#         sshEndpoint: timoserver
#         SourceFolder: '$(System.DefaultWorkingDirectory)'
#         Contents: '**/scm-client/build/**'
#         targetFolder: /home/kmcode/scm-km/test/
#         failOnEmptySource: true


# - stage: Copy_to_Timos_Server
#   displayName: Copy Build to Timos Server
#   jobs:
#   - job: Copy_to_Timos_Server
#     displayName: Copy Build to Timos Server
#     steps:
    # - task: CopyFilesOverSSH@0
    #   inputs:
    #     sshEndpoint: 'timoserver'
    #     sourceFolder: '$(Pipeline.Workspace)'
    #     targetFolder: /home/kmcode/scm-km/test/
    #     contents: '**'
    #     readyTimeout: '20000'
    #     failOnEmptySource: true
    # - task: CopyFilesOverSSH@0
    #   inputs:
    #     sshEndpoint: 'timoserver'
    #     sourceFolder: '$(System.DefaultWorkingDirectory)'
    #     targetFolder: /home/kmcode/scm-km/test/
    #     contents: '**'
    #     readyTimeout: '20000'
    #     failOnEmptySource: true
    # - task: CopyFilesOverSSH@0
    #   displayName: 'Securely copy files to the remote machine'
    #   inputs:
    #     sshEndpoint: timoserver
    #     SourceFolder: '$(System.DefaultWorkingDirectory)'
    #     targetFolder: /home/kmcode/scm-km/test2/
    #     contents: |
    #       **/scm-server/target/*.jar
    #       **/scm-client/build/**