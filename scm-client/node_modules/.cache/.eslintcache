[{"F:\\My Experiment\\Software Engineering Methods\\SCM Project - Self\\scm-client\\src\\index.tsx":"1","F:\\My Experiment\\Software Engineering Methods\\SCM Project - Self\\scm-client\\src\\reportWebVitals.ts":"2","F:\\My Experiment\\Software Engineering Methods\\SCM Project - Self\\scm-client\\src\\App.tsx":"3","F:\\My Experiment\\Software Engineering Methods\\SCM Project - Self\\scm-client\\src\\containers\\TruckContainer.tsx":"4","F:\\My Experiment\\Software Engineering Methods\\SCM Project - Self\\scm-client\\src\\components\\TruckDatagridComponent.tsx":"5","F:\\My Experiment\\Software Engineering Methods\\SCM Project - Self\\scm-client\\src\\controllers\\TruckController.ts":"6"},{"size":554,"mtime":1665398400580,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1665398400285,"results":"9","hashOfConfig":"8"},{"size":255,"mtime":1665467901978,"results":"10","hashOfConfig":"8"},{"size":340,"mtime":1665417572606,"results":"11","hashOfConfig":"8"},{"size":1538,"mtime":1665489919511,"results":"12","hashOfConfig":"8"},{"size":292,"mtime":1665424987995,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1un5jtx",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"F:\\My Experiment\\Software Engineering Methods\\SCM Project - Self\\scm-client\\src\\index.tsx",[],[],"F:\\My Experiment\\Software Engineering Methods\\SCM Project - Self\\scm-client\\src\\reportWebVitals.ts",[],[],"F:\\My Experiment\\Software Engineering Methods\\SCM Project - Self\\scm-client\\src\\App.tsx",["36"],[],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TruckContainer from './containers/TruckContainer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TruckContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\My Experiment\\Software Engineering Methods\\SCM Project - Self\\scm-client\\src\\containers\\TruckContainer.tsx",["37","38"],[],"import {useState, useEffect, FC} from 'react';\r\nimport TruckDatagridComponent from '../components/TruckDatagridComponent';\r\n\r\n\r\nconst TruckContainer:FC=props=> {\r\n    return(\r\n        <div>\r\n            <h1>SCM Application</h1>\r\n            <TruckDatagridComponent/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TruckContainer;","F:\\My Experiment\\Software Engineering Methods\\SCM Project - Self\\scm-client\\src\\components\\TruckDatagridComponent.tsx",["39"],[],"import {useState, useEffect, FC} from 'react';\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\r\nimport { Truck } from '../type/Truck';\r\nimport { getTruckData } from '../controllers/TruckController';\r\nimport styles from './datagrid.module.css'; \r\n\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: 'licencePlate',\r\n    headerName: 'License Plate',\r\n    width: 150,\r\n    editable: true,\r\n    headerAlign: 'center',\r\n  },\r\n  {\r\n    field: 'name',\r\n    headerName: 'Name',\r\n    width: 150,\r\n    editable: true,\r\n    headerAlign: 'center',\r\n  },\r\n];\r\n\r\n\r\nconst TruckDatagridComponent:FC=props=> {\r\n    const [truckArray, setTruckArray] = useState<Array<Truck>>([]);\r\n\r\n    async function readTruckData() {\r\n        await getTruckData()\r\n        .catch(console.error)\r\n        .then(response=>{\r\n            setTruckArray(response);\r\n            console.log(JSON.stringify(response));\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        readTruckData();\r\n    }, [])\r\n\r\n\r\n    return(\r\n      <div className={styles.datagrid}>        \r\n        <Box sx={{ height: 600, width: '100%' }}>\r\n        <DataGrid\r\n          rows={truckArray}\r\n          columns={columns}\r\n          pageSize={10}\r\n          rowsPerPageOptions={[10]}\r\n          checkboxSelection\r\n          disableSelectionOnClick\r\n          experimentalFeatures={{ newEditingApi: true }}\r\n        />\r\n        </Box>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default TruckDatagridComponent;","F:\\My Experiment\\Software Engineering Methods\\SCM Project - Self\\scm-client\\src\\controllers\\TruckController.ts",["40"],[],"import { Truck } from '../type/Truck';\r\n\r\nexport async function getTruckData(): Promise<any> {\r\n    const response = await fetch('http://localhost:8080/api/truck');\r\n    if(!response.ok) {\r\n        throw new Error(response.statusText);\r\n    } else {\r\n        return response.json();\r\n    }\r\n}",{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":12},{"ruleId":"41","severity":1,"message":"45","line":1,"column":9,"nodeType":"43","messageId":"44","endLine":1,"endColumn":17},{"ruleId":"41","severity":1,"message":"46","line":1,"column":19,"nodeType":"43","messageId":"44","endLine":1,"endColumn":28},{"ruleId":"41","severity":1,"message":"47","line":4,"column":32,"nodeType":"43","messageId":"44","endLine":4,"endColumn":53},{"ruleId":"41","severity":1,"message":"48","line":1,"column":10,"nodeType":"43","messageId":"44","endLine":1,"endColumn":15},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'GridValueGetterParams' is defined but never used.","'Truck' is defined but never used."]