{"ast":null,"code":"var _jsxFileName = \"F:\\\\My Experiment\\\\Software Engineering Methods\\\\SCM Project - Self\\\\scm-client\\\\src\\\\components\\\\LocationDatagridComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { getLocationData } from '../controllers/LocationController';\nimport styles from './datagrid.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 25,\n  editable: true,\n  headerAlign: 'center'\n}, {\n  field: 'no',\n  headerName: 'No.',\n  width: 25,\n  editable: true,\n  headerAlign: 'center'\n}, {\n  field: 'lat',\n  headerName: 'Latitude',\n  width: 100,\n  editable: true,\n  headerAlign: 'center'\n}, {\n  field: 'long_',\n  headerName: 'Longitude',\n  width: 100,\n  editable: true,\n  headerAlign: 'center'\n}, {\n  field: 'maxHrCap',\n  headerName: 'Max HR Capacity',\n  width: 125,\n  editable: true,\n  headerAlign: 'center'\n}, {\n  field: 'name',\n  headerName: 'Name',\n  width: 125,\n  editable: true,\n  headerAlign: 'center'\n}, {\n  field: 'processingCost',\n  headerName: 'Processing Cost',\n  width: 25,\n  editable: true,\n  headerAlign: 'center'\n}, {\n  field: 'sla',\n  headerName: 'SLA',\n  width: 25,\n  editable: true,\n  headerAlign: 'center'\n}];\n\nconst LocationDatagridComponent = props => {\n  _s();\n\n  const [locationArray, setLocationArray] = useState([]);\n\n  async function readLocationData() {\n    await getLocationData().catch(console.error).then(locationResponse => {\n      setLocationArray(locationResponse);\n      console.log(JSON.stringify(locationResponse));\n    });\n  }\n\n  useEffect(() => {\n    readLocationData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.datagrid,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: 600,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: locationArray,\n        columns: columns,\n        pageSize: 10,\n        rowsPerPageOptions: [10],\n        checkboxSelection: true // disableSelectionOnClick\n        ,\n        experimentalFeatures: {\n          newEditingApi: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n};\n\n_s(LocationDatagridComponent, \"8kzGyqXBjewNfPTt1dOr7ArQxNM=\");\n\n_c = LocationDatagridComponent;\nexport default LocationDatagridComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationDatagridComponent\");","map":{"version":3,"names":["useState","useEffect","React","Box","DataGrid","getLocationData","styles","columns","field","headerName","width","editable","headerAlign","LocationDatagridComponent","props","locationArray","setLocationArray","readLocationData","catch","console","error","then","locationResponse","log","JSON","stringify","datagrid","height","newEditingApi"],"sources":["F:/My Experiment/Software Engineering Methods/SCM Project - Self/scm-client/src/components/LocationDatagridComponent.tsx"],"sourcesContent":["import {useState, useEffect, FC} from 'react';\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\r\nimport { Location } from '../type/Location';\r\nimport { getLocationData } from '../controllers/LocationController';\r\nimport styles from './datagrid.module.css'; \r\n\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: 'id',\r\n    headerName: 'ID',\r\n    width: 25,\r\n    editable: true,\r\n    headerAlign: 'center',\r\n  },\r\n  {\r\n    field: 'no',\r\n    headerName: 'No.',\r\n    width: 25,\r\n    editable: true,\r\n    headerAlign: 'center',\r\n  },\r\n  {\r\n    field: 'lat',\r\n    headerName: 'Latitude',\r\n    width: 100,\r\n    editable: true,\r\n    headerAlign: 'center',\r\n  },\r\n  {\r\n    field: 'long_',\r\n    headerName: 'Longitude',\r\n    width: 100,\r\n    editable: true,\r\n    headerAlign: 'center',\r\n  },\r\n  {\r\n    field: 'maxHrCap',\r\n    headerName: 'Max HR Capacity',\r\n    width: 125,\r\n    editable: true,\r\n    headerAlign: 'center',\r\n  },\r\n  {\r\n    field: 'name',\r\n    headerName: 'Name',\r\n    width: 125,\r\n    editable: true,\r\n    headerAlign: 'center',\r\n  },\r\n  {\r\n    field: 'processingCost',\r\n    headerName: 'Processing Cost',\r\n    width: 25,\r\n    editable: true,\r\n    headerAlign: 'center',\r\n  },\r\n  {\r\n    field: 'sla',\r\n    headerName: 'SLA',\r\n    width: 25,\r\n    editable: true,\r\n    headerAlign: 'center',\r\n  },\r\n];\r\n\r\n\r\nconst LocationDatagridComponent:FC=props=> {\r\n    const [locationArray, setLocationArray] = useState<Array<Location>>([]);\r\n\r\n    async function readLocationData() {\r\n        await getLocationData()\r\n        .catch(console.error)\r\n        .then(locationResponse=>{\r\n            setLocationArray(locationResponse);\r\n            console.log(JSON.stringify(locationResponse));\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        readLocationData();\r\n    }, [])\r\n\r\n\r\n\r\n    return(\r\n      <div className={styles.datagrid}>        \r\n        <Box sx={{ height: 600, width: '100%' }}>\r\n        <DataGrid \r\n          rows={locationArray}\r\n          columns={columns}\r\n          pageSize={10}\r\n          rowsPerPageOptions={[10]}\r\n          checkboxSelection\r\n          // disableSelectionOnClick\r\n          experimentalFeatures={{ newEditingApi: true }}\r\n        />\r\n        </Box>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default LocationDatagridComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}